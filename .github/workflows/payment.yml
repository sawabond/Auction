name: Payment service

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to EKS (y/n)'
        required: true
        default: 'n'

jobs:
  build_payment_web:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tagging.outputs.version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x' # Use the desired .NET Core 8 version

      - name: Build Payment.Web
        run: |
          cd Payment.Web # Set the working directory to Payment.Web
          dotnet build # Use appropriate build command for Payment.Web

      - name: Build Docker Image for Payment.Web
        run: |
          docker build -t payment-web -f PaymentDockerfile .

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Tagging
        id: tagging
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          echo "::set-output name=version::$VERSION"
          echo "Image tag: $VERSION"

      - name: Publish Docker Image to Docker Hub
        run: |
          docker tag payment-web ${{ secrets.DOCKER_HUB_USERNAME }}/payment-web:${{ steps.tagging.outputs.version }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/payment-web:${{ steps.tagging.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_payment_web
    if: ${{ github.event.inputs.deploy == 'y' }}
    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Kubeconfig
        run: |
          aws eks --region us-east-1 update-kubeconfig --name auction
  
      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/payment-service payment-web=${{ secrets.DOCKER_HUB_USERNAME }}/payment-web:${{ needs.build_payment_web.outputs.image_tag }} --namespace=auction-namespace
